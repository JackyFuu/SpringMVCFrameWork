<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app  version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
  <display-name>Archetype Created Web Application</display-name>
  <!-- Servlet容器会首先初始化Spring MVC的DispatcherServlet，在DispatcherServlet启动时，
       它根据配置WebConfig创建了一个类型是WebApplicationContext的IoC容器，
       完成所有Bean的初始化，并将容器绑到ServletContext上。 -->
  <!-- 初始化参数contextClass指定使用注解配置的AnnotationConfigWebApplicationContext，
       配置文件的位置参数contextConfigLocation指向WebConfig的完整类名，
       最后，把这个Servlet映射到/*，即处理所有URL。-->
  <!-- 因为DispatcherServlet持有IoC容器，能从IoC容器中获取所有@Controller的Bean，
       因此，DispatcherServlet接收到所有HTTP请求后，根据Controller方法配置的路径，
       就可以正确地把请求转发到指定方法，并根据返回的ModelAndView决定如何渲染页面。-->
  <servlet>
    <servlet-name>dispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextClass</param-name>
      <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
    </init-param>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>com.jacky.WebConfig</param-value>
    </init-param>
    <load-on-startup>0</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/*</url-pattern>
  </servlet-mapping>
  <!-- 使用一个EncodingFilter，在全局范围类给HttpServletRequest和HttpServletResponse强制设置为UTF-8编码。
        可以自己编写一个EncodingFilter，也可以直接使用Spring MVC自带的一个CharacterEncodingFilter。-->
<!--  <filter>-->
<!--    <filter-name>encodingFilter</filter-name>-->
<!--    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>-->
<!--    <init-param>-->
<!--      <param-name>encoding</param-name>-->
<!--      <param-value>UTF-8</param-value>-->
<!--    </init-param>-->
<!--    <init-param>-->
<!--      <param-name>forceEncoding</param-name>-->
<!--      <param-value>true</param-value>-->
<!--    </init-param>-->
<!--  </filter>-->
<!--  <filter-mapping>-->
<!--    <filter-name>encodingFilter</filter-name>-->
<!--    <url-pattern>/*</url-pattern>-->
<!--  </filter-mapping>-->
  <!-- 让Servlet容器实例化的Filter，间接引用Spring容器实例化的AuthFilter。Spring MVC提供了一个DelegatingFilterProxy-->
<!--  <filter>-->
<!--    <filter-name>authFilter</filter-name>-->
<!--    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
<!--  </filter>-->
<!--  <filter-mapping>-->
<!--    <filter-name>authFilter</filter-name>-->
<!--    <url-pattern>/*</url-pattern>-->
<!--  </filter-mapping>-->
</web-app>
